const e=JSON.parse('{"key":"v-529547d0","path":"/front-end/javascript/advanced-performance/throttle-and-debounce.html","title":"节流&防抖","lang":"zh-CN","frontmatter":{"index":false,"icon":"laptop-code","category":["JavaScript"],"date":"2022-08-26T00:00:00.000Z","description":"节流&amp;防抖 节流和防抖主要是为了优化前端的因多次回调导致性能下降问题以及减少后端请求处理压力。常用于短时间内触发重复事件的处理逻辑。 节流：在一定时间内只发起第一次调用，之后的具体时间段内，无视对其回调函数重复调用 防抖：在计时开始/结束后调用，若在一定时间内重复触发，则重新计时，直到最后一次调用 节流 节流有三种实现方式，时间戳、定时器以及两者的结合","head":[["meta",{"property":"og:url","content":"https://xiaofengzeng.github.io/kite-notes/front-end/javascript/advanced-performance/throttle-and-debounce.html"}],["meta",{"property":"og:site_name","content":"kite-notes"}],["meta",{"property":"og:title","content":"节流&防抖"}],["meta",{"property":"og:description","content":"节流&amp;防抖 节流和防抖主要是为了优化前端的因多次回调导致性能下降问题以及减少后端请求处理压力。常用于短时间内触发重复事件的处理逻辑。 节流：在一定时间内只发起第一次调用，之后的具体时间段内，无视对其回调函数重复调用 防抖：在计时开始/结束后调用，若在一定时间内重复触发，则重新计时，直到最后一次调用 节流 节流有三种实现方式，时间戳、定时器以及两者的结合"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-26T16:15:05.000Z"}],["meta",{"property":"article:author","content":"Kite.Zeng"}],["meta",{"property":"article:published_time","content":"2022-08-26T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-12-26T16:15:05.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"节流&防抖\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-08-26T00:00:00.000Z\\",\\"dateModified\\":\\"2023-12-26T16:15:05.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Kite.Zeng\\"}]}"]]},"headers":[{"level":2,"title":"节流","slug":"节流","link":"#节流","children":[]},{"level":2,"title":"防抖","slug":"防抖","link":"#防抖","children":[]},{"level":2,"title":"两者的联系与区别","slug":"两者的联系与区别","link":"#两者的联系与区别","children":[]}],"git":{"createdTime":1703572619000,"updatedTime":1703607305000,"contributors":[{"name":"XiaofengZeng","email":"zengxf12123@163.com","commits":2}]},"readingTime":{"minutes":2.4,"words":720},"filePathRelative":"front-end/javascript/advanced-performance/throttle-and-debounce.md","localizedDate":"2022年8月26日","excerpt":"<h1> 节流&amp;防抖</h1>\\n<p>节流和防抖主要是为了优化前端的因多次回调导致性能下降问题以及减少后端请求处理压力。常用于短时间内触发重复事件的处理逻辑。</p>\\n<p><strong>节流</strong>：在一定时间内只发起第一次调用，之后的具体时间段内，无视对其回调函数重复调用</p>\\n<p><strong>防抖</strong>：在计时开始/结束后调用，若在一定时间内重复触发，则重新计时，直到最后一次调用</p>\\n<h2> 节流</h2>\\n<p>节流有三种实现方式，<strong>时间戳</strong>、<strong>定时器</strong>以及<strong>两者的结合</strong></p>","autoDesc":true}');export{e as data};
