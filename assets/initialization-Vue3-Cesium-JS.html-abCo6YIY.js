const e=JSON.parse('{"key":"v-0e0b856e","path":"/gis/cesium/initialization-Vue3-Cesium-JS.html","title":"Vue3+Vue-CLI+Cesium","lang":"zh-CN","frontmatter":{"index":false,"icon":"laptop-code","date":"2023-12-16T00:00:00.000Z","category":["Cesium"],"description":"Vue3+Vue-CLI+Cesium Vue-CLI和Vite本质上就是项目的构建工具，并没有多大区别，构建相关的内容主要参考其思路；TS和JS的选择也是根据项目技术选型决定，本质啥也没有区别，同时，TS和JS的选择会在搭建工程时完成相关初始化。因此，主要关注的还是Cesium依赖的处理方式，即构建工具的对于Cesium的相关配置。 版本号 cesium@1.111.0 思路 1. 创建Vue项目 # 使用vue-cli方式需要提前全局安装该依赖， # vite则不需要，vite在构建项目时会自动安装 npm install -g @vue/cli # vue=cli创建 vue create cesium-project # vite创建 npm create vite@latest # 后续会进行定制化的配置选择（ # 1. TS/JS的选择 # 2. 语法检查的选择 # 3. 格式化的选择 # ... # 创建成功后，进入到工程文件夹，并启动即可 cd cesium-project npm run serve","head":[["meta",{"property":"og:url","content":"https://xiaofengzeng.github.io/kite-notes/gis/cesium/initialization-Vue3-Cesium-JS.html"}],["meta",{"property":"og:site_name","content":"kite-notes"}],["meta",{"property":"og:title","content":"Vue3+Vue-CLI+Cesium"}],["meta",{"property":"og:description","content":"Vue3+Vue-CLI+Cesium Vue-CLI和Vite本质上就是项目的构建工具，并没有多大区别，构建相关的内容主要参考其思路；TS和JS的选择也是根据项目技术选型决定，本质啥也没有区别，同时，TS和JS的选择会在搭建工程时完成相关初始化。因此，主要关注的还是Cesium依赖的处理方式，即构建工具的对于Cesium的相关配置。 版本号 cesium@1.111.0 思路 1. 创建Vue项目 # 使用vue-cli方式需要提前全局安装该依赖， # vite则不需要，vite在构建项目时会自动安装 npm install -g @vue/cli # vue=cli创建 vue create cesium-project # vite创建 npm create vite@latest # 后续会进行定制化的配置选择（ # 1. TS/JS的选择 # 2. 语法检查的选择 # 3. 格式化的选择 # ... # 创建成功后，进入到工程文件夹，并启动即可 cd cesium-project npm run serve"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-26T07:08:30.000Z"}],["meta",{"property":"article:author","content":"Kite.Zeng"}],["meta",{"property":"article:published_time","content":"2023-12-16T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-12-26T07:08:30.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Vue3+Vue-CLI+Cesium\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-12-16T00:00:00.000Z\\",\\"dateModified\\":\\"2023-12-26T07:08:30.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Kite.Zeng\\"}]}"]]},"headers":[{"level":2,"title":"版本号","slug":"版本号","link":"#版本号","children":[]},{"level":2,"title":"思路","slug":"思路","link":"#思路","children":[{"level":3,"title":"1. 创建Vue项目","slug":"_1-创建vue项目","link":"#_1-创建vue项目","children":[]},{"level":3,"title":"2. 安装Cesium依赖","slug":"_2-安装cesium依赖","link":"#_2-安装cesium依赖","children":[]},{"level":3,"title":"3. Cesium在构建工具中的配置","slug":"_3-cesium在构建工具中的配置","link":"#_3-cesium在构建工具中的配置","children":[]}]},{"level":2,"title":"坑点记录","slug":"坑点记录","link":"#坑点记录","children":[]}],"git":{"createdTime":1703572619000,"updatedTime":1703574510000,"contributors":[{"name":"XiaofengZeng","email":"zengxf12123@163.com","commits":2}]},"readingTime":{"minutes":3.34,"words":1001},"filePathRelative":"gis/cesium/initialization-Vue3-Cesium-JS.md","localizedDate":"2023年12月16日","excerpt":"<h1> Vue3+Vue-CLI+Cesium</h1>\\n<p>Vue-CLI和Vite本质上就是项目的构建工具，并没有多大区别，构建相关的内容主要参考其思路；TS和JS的选择也是根据项目技术选型决定，本质啥也没有区别，同时，TS和JS的选择会在搭建工程时完成相关初始化。因此，主要关注的还是Cesium依赖的处理方式，即构建工具的对于Cesium的相关配置。</p>\\n<h2> 版本号</h2>\\n<ul>\\n<li>cesium@1.111.0</li>\\n</ul>\\n<h2> 思路</h2>\\n<h3> 1. 创建Vue项目</h3>\\n<div class=\\"language-bash line-numbers-mode\\" data-ext=\\"sh\\"><pre class=\\"language-bash\\"><code><span class=\\"token comment\\"># 使用vue-cli方式需要提前全局安装该依赖，</span>\\n<span class=\\"token comment\\"># vite则不需要，vite在构建项目时会自动安装</span>\\n<span class=\\"token function\\">npm</span> <span class=\\"token function\\">install</span> <span class=\\"token parameter variable\\">-g</span> @vue/cli\\n\\n<span class=\\"token comment\\"># vue=cli创建</span>\\nvue create cesium-project\\n<span class=\\"token comment\\"># vite创建</span>\\n<span class=\\"token function\\">npm</span> create vite@latest\\n\\n<span class=\\"token comment\\"># 后续会进行定制化的配置选择（</span>\\n<span class=\\"token comment\\"># 1. TS/JS的选择</span>\\n<span class=\\"token comment\\"># 2. 语法检查的选择</span>\\n<span class=\\"token comment\\"># 3. 格式化的选择</span>\\n<span class=\\"token comment\\">#    ...</span>\\n\\n<span class=\\"token comment\\"># 创建成功后，进入到工程文件夹，并启动即可</span>\\n<span class=\\"token builtin class-name\\">cd</span> cesium-project\\n<span class=\\"token function\\">npm</span> run serve\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{e as data};
