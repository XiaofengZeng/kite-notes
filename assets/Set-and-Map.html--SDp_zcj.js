const e=JSON.parse(`{"key":"v-12ed7796","path":"/front-end/javascript/es6/Set-and-Map.html","title":"Set和WeakSet、Map和WeakMap","lang":"zh-CN","frontmatter":{"index":false,"icon":"laptop-code","date":"2023-10-21T00:00:00.000Z","category":["JavaScript"],"description":"Set和WeakSet、Map和WeakMap Set 类似数组的数据结构，每个成员的值是唯一的 Set初始化参数接受数组（具有Iterable接口的数据结构），会将重复值排除，只保留一个 添加值时，不会做类型的自动转换（5 和 “5”），但NaN会被认为是相同（实际上NaN不等于NaN） 支持keys()，values()，entries()方法，keys()和values()方法的效果是一样的 可以实现 并集、交集、差集 常见场景 使用Set实现数组的去重 [...new Set(array)] / Array.from(new Set(array)) 使用Set实现字符串去重 [...new Set('ababbc')].join('')","head":[["meta",{"property":"og:url","content":"https://xiaofengzeng.github.io/kite-notes/front-end/javascript/es6/Set-and-Map.html"}],["meta",{"property":"og:site_name","content":"kite-notes"}],["meta",{"property":"og:title","content":"Set和WeakSet、Map和WeakMap"}],["meta",{"property":"og:description","content":"Set和WeakSet、Map和WeakMap Set 类似数组的数据结构，每个成员的值是唯一的 Set初始化参数接受数组（具有Iterable接口的数据结构），会将重复值排除，只保留一个 添加值时，不会做类型的自动转换（5 和 “5”），但NaN会被认为是相同（实际上NaN不等于NaN） 支持keys()，values()，entries()方法，keys()和values()方法的效果是一样的 可以实现 并集、交集、差集 常见场景 使用Set实现数组的去重 [...new Set(array)] / Array.from(new Set(array)) 使用Set实现字符串去重 [...new Set('ababbc')].join('')"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-26T16:15:05.000Z"}],["meta",{"property":"article:author","content":"Kite.Zeng"}],["meta",{"property":"article:published_time","content":"2023-10-21T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-12-26T16:15:05.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Set和WeakSet、Map和WeakMap\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-10-21T00:00:00.000Z\\",\\"dateModified\\":\\"2023-12-26T16:15:05.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Kite.Zeng\\"}]}"]]},"headers":[{"level":2,"title":"Set","slug":"set","link":"#set","children":[]},{"level":2,"title":"WeakSet","slug":"weakset","link":"#weakset","children":[]},{"level":2,"title":"Map","slug":"map","link":"#map","children":[]},{"level":2,"title":"WeakMap","slug":"weakmap","link":"#weakmap","children":[]}],"git":{"createdTime":1703572619000,"updatedTime":1703607305000,"contributors":[{"name":"XiaofengZeng","email":"zengxf12123@163.com","commits":2}]},"readingTime":{"minutes":1.98,"words":593},"filePathRelative":"front-end/javascript/es6/Set-and-Map.md","localizedDate":"2023年10月21日","excerpt":"<h1> Set和WeakSet、Map和WeakMap</h1>\\n<h2> Set</h2>\\n<ul>\\n<li>类似数组的数据结构，每个成员的值是唯一的</li>\\n<li>Set初始化参数接受数组（具有Iterable接口的数据结构），会将重复值排除，只保留一个</li>\\n<li>添加值时，不会做类型的自动转换（5 和 “5”），但NaN会被认为是相同（实际上NaN不等于NaN）</li>\\n<li>支持<code>keys()</code>，<code>values()</code>，<code>entries()</code>方法，<code>keys()</code>和<code>values()</code>方法的效果是一样的</li>\\n<li>可以实现 并集、交集、差集</li>\\n<li>常见场景\\n<ul>\\n<li>使用Set实现数组的去重 <code>[...new Set(array)]</code> / <code>Array.from(new Set(array))</code></li>\\n<li>使用Set实现字符串去重 <code>[...new Set('ababbc')].join('')</code></li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true}`);export{e as data};
