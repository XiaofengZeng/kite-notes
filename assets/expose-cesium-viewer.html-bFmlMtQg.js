import{_ as o}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as p,o as i,c,b as n,d as s,a as e,e as t}from"./app-nlX3gzzp.js";const l={},r=n("h1",{id:"olcesium源码修改-暴露cesium-viewer",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#olcesium源码修改-暴露cesium-viewer","aria-hidden":"true"},"#"),s(" OLCesium源码修改：暴露Cesium.Viewer")],-1),u=n("h2",{id:"需求",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#需求","aria-hidden":"true"},"#"),s(" 需求")],-1),d=n("code",null,"viewer.entitites",-1),k=n("code",null,"viewer.dataSources",-1),v=n("code",null,"viewer.flyTo()",-1),m=n("code",null,"viewer.zoomTo()",-1),b={href:"https://github.com/openlayers/ol-cesium/issues/993",target:"_blank",rel:"noopener noreferrer"},w=t('<h2 id="思路" tabindex="-1"><a class="header-anchor" href="#思路" aria-hidden="true">#</a> 思路</h2><p>因为OLCesium的使用前提之一，是需要提供Cesium全局变量。那么，我们可以通过new Cesium.Viewer()来进行初始化实例，将原有OLCesium中使用的、与Viewer有关的属性使用初始化后的viewer对象属性进行等价替换：</p><ol><li><code>scene</code>：需要在构造函数中提供一个viewer的配置项<code>viewerOptions</code>，等价替换原本的<code>sceneOptions</code></li><li><code>canvas</code>：在实例化Viewer后，实例对象中包含了canvas对象，将其替换与原本的canvas赋值</li></ol><p>需要<strong>注意几点</strong>：</p><ol><li>实例化Viewer后，会自动将相关默认控件插入到Element中，如果样式没有引用对，则会出排版问题，因此要正确引入<code>cesium/Widgets/widgets.css</code>样式文件</li></ol><h2 id="代码参考" tabindex="-1"><a class="header-anchor" href="#代码参考" aria-hidden="true">#</a> 代码参考</h2>',6),h={href:"https://github.com/XiaofengZeng/ol-cesium-viewer",target:"_blank",rel:"noopener noreferrer"},_=t(`<ul><li>OLCesium.js</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">OLCesium</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
  viewer_<span class="token punctuation">;</span>   <span class="token comment">// 声明一个属性viewer_</span>

  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>

    <span class="token comment">// 设置默认Viewer的初始值</span>
    <span class="token keyword">const</span> defaulViewerOptions <span class="token operator">=</span> <span class="token punctuation">{</span>
	  <span class="token literal-property property">sceneMode</span><span class="token operator">:</span> Cesium<span class="token punctuation">.</span>SceneMode<span class="token punctuation">.</span><span class="token constant">SCENE3D</span><span class="token punctuation">,</span>
	  <span class="token literal-property property">scene3DOnly</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
	  <span class="token literal-property property">animation</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
	  <span class="token literal-property property">geocoder</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
	  <span class="token literal-property property">homeButton</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
	  <span class="token literal-property property">fullscreenButton</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
	  <span class="token literal-property property">navigationHelpButton</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
	  <span class="token literal-property property">sceneModePicker</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
	  <span class="token literal-property property">timeline</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
	  <span class="token literal-property property">baseLayerPicker</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
	  <span class="token literal-property property">baseLayer</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
	  <span class="token literal-property property">terrain</span><span class="token operator">:</span> Cesium<span class="token punctuation">.</span>Terrain<span class="token punctuation">.</span><span class="token function">fromWorldTerrain</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
	<span class="token punctuation">}</span>

	<span class="token comment">// 合并options.viewerOptions或使用默认viewer参数</span>
	<span class="token keyword">const</span> viewerOptions <span class="token operator">=</span> options<span class="token punctuation">.</span>viewerOptions <span class="token operator">!==</span> <span class="token keyword">undefined</span> <span class="token operator">?</span>
	  Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>defaulViewerOptions<span class="token punctuation">,</span> options<span class="token punctuation">.</span>viewerOptions<span class="token punctuation">)</span> <span class="token operator">:</span> defaulViewerOptions

	<span class="token comment">// 实例化viewer_</span>
	<span class="token keyword">this</span><span class="token punctuation">.</span>viewer_ <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Cesium<span class="token punctuation">.</span>Viewer</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>container_<span class="token punctuation">,</span> viewerOptions<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 注释原本的scene_实例化以及赋值，使用viewer中的scene</span>
	<span class="token comment">// this.container_.appendChild(this.canvas_);</span>
	<span class="token comment">// const sceneOptions = options.sceneOptions !== undefined ?</span>
	<span class="token comment">//     { ...options.sceneOptions, canvas: this.canvas_, scene3DOnly: true } :</span>
	<span class="token comment">//     { canvas: this.canvas_, scene3DOnly: true };</span>
	<span class="token comment">// this.scene_ = new Cesium.Scene(viewerOptions);</span>
	<span class="token keyword">this</span><span class="token punctuation">.</span>scene_ <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>viewer_<span class="token punctuation">.</span>scene<span class="token punctuation">;</span>

	<span class="token comment">// 注释原本的canvas_赋值，使用viewer中的canvas</span>
	<span class="token comment">// this.canvas_ = document.createElement(&#39;canvas&#39;);</span>
	<span class="token keyword">this</span><span class="token punctuation">.</span>canvas_ <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>viewer_<span class="token punctuation">.</span>container<span class="token punctuation">.</span><span class="token function">getElementsByClassName</span><span class="token punctuation">(</span><span class="token string">&#39;cesium-widget&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>children<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>

    <span class="token comment">// ...</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// 暴露API，用于获取Viewer</span>
  <span class="token function">getCesiumViewer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>viewer_<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2);function y(f,O){const a=p("ExternalLinkIcon");return i(),c("div",null,[r,u,n("p",null,[s("Cesium.Viewer是Cesium的一个视窗，是一个高层次的对象（相对于Scene而言），日常业务也常常使用其来管理数据，如"),d,s("、"),k,s("等，以及一些方法"),v,s("、"),m,s("等。虽然"),n("a",b,[s("Openlayers团队不支持OLCesium向外暴露Viewer对象"),e(a)]),s("，但我们可以根据OLCesium的构造函数逻辑去做相关的处理使得Viewer对象能够暴露。")]),w,n("p",null,[s("具体源码参考："),n("a",h,[s("XiaofengZeng/ol-cesium-viewer: expose Cesium Viewer on ol-cesium. (github.com)"),e(a)])]),_])}const V=o(l,[["render",y],["__file","expose-cesium-viewer.html.vue"]]);export{V as default};
