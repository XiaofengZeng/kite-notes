import{_ as a}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as n,c as s,e}from"./app-5hxSoQGh.js";const t={},p=e(`<h1 id="解构赋值" tabindex="-1"><a class="header-anchor" href="#解构赋值" aria-hidden="true">#</a> 解构赋值</h1><h2 id="一、数组的解构赋值" tabindex="-1"><a class="header-anchor" href="#一、数组的解构赋值" aria-hidden="true">#</a> 一、数组的解构赋值</h2><p>数据解构赋值，准确来说是对<strong>可遍历的结构数据</strong>进行解构赋值</p><ul><li>支持完全解构赋值 和 不完全解构赋值</li><li>支持嵌套结构解构</li><li>支持设置默认值（赋值元素值的undefined时有效，null则解构赋值为null）</li></ul><h3 id="_1-完全解构" tabindex="-1"><a class="header-anchor" href="#_1-完全解构" aria-hidden="true">#</a> 1. 完全解构</h3><p>将数组内的所有元素赋值到对应的变量中</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">[</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_2-不完全解构" tabindex="-1"><a class="header-anchor" href="#_2-不完全解构" aria-hidden="true">#</a> 2. 不完全解构</h3><p>将数组内部分的元素赋值到对应位置的变量中</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">[</span> <span class="token punctuation">,</span>  <span class="token punctuation">,</span> c<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="二、对象的解构赋值" tabindex="-1"><a class="header-anchor" href="#二、对象的解构赋值" aria-hidden="true">#</a> 二、对象的解构赋值</h2><p>对象解构赋值</p><ul><li>支持解构赋值对象的属性和方法（类似模块化导入）</li><li>支持且套解构解构</li><li>支持设置默认值</li><li>支持使用对象解构赋值的方式解构数组</li></ul><h3 id="_1-解构属性和方法" tabindex="-1"><a class="header-anchor" href="#_1-解构属性和方法" aria-hidden="true">#</a> 1. 解构属性和方法</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> name<span class="token punctuation">,</span> sayHello <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;xxx&#39;</span><span class="token punctuation">,</span> <span class="token function-variable function">sayHello</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;hey!&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="三、字符串的解构赋值" tabindex="-1"><a class="header-anchor" href="#三、字符串的解构赋值" aria-hidden="true">#</a> 三、字符串的解构赋值</h2><p>类似数组的解构赋值</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">[</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">,</span> d<span class="token punctuation">,</span> e<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;hello&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="四、数值和布尔值的解构赋值" tabindex="-1"><a class="header-anchor" href="#四、数值和布尔值的解构赋值" aria-hidden="true">#</a> 四、数值和布尔值的解构赋值</h2><p>如果等号右边是数值和布尔值，则会先转为对象</p><h2 id="五、函数参数的解构赋值" tabindex="-1"><a class="header-anchor" href="#五、函数参数的解构赋值" aria-hidden="true">#</a> 五、函数参数的解构赋值</h2><ul><li>与数组解构赋值和对象解构赋值一样，也支持默认参数</li></ul>`,22),c=[p];function o(i,l){return n(),s("div",null,c)}const d=a(t,[["render",o],["__file","deconstruction.html.vue"]]);export{d as default};
