import{_ as l}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as o,o as e,c as i,b as s,d as a,a as c,e as t}from"./app-5hxSoQGh.js";const r="/kite-notes/assets/向量的几何分解-5kksyj67.png",h="/kite-notes/assets/向量计算的规则-xCajfJ9x.png",d="/kite-notes/assets/笛卡尔坐标系中的点乘-DETrgnJj.png",p="/kite-notes/assets/点乘在图形学中的应用-向量投影-nVJ-OePw.png",m="/kite-notes/assets/点乘在图形学中的应用-向量前后判断-AsS2qc8w.png",_="/kite-notes/assets/叉乘原理-r0mZddX9.png",u="/kite-notes/assets/叉乘支持的计算规则-QU-iX1fs.png",g={},f=s("h1",{id:"回顾线性代数",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#回顾线性代数","aria-hidden":"true"},"#"),a(" 回顾线性代数")],-1),v=s("h2",{id:"图形学所依赖基础",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#图形学所依赖基础","aria-hidden":"true"},"#"),a(" 图形学所依赖基础")],-1),y={href:"https://sites.cs.ucsb.edu/~lingqi/teaching/resources/GAMES101_Lecture_02.pdf",target:"_blank",rel:"noopener noreferrer"},b=t('<ul><li>基础数学 <ul><li>线性代数</li><li>微积分</li><li>统计学</li></ul></li><li>基础物理学 <ul><li>光学</li><li>机械原理</li></ul></li><li>工程学 <ul><li>信息处理</li><li>数据分析</li></ul></li></ul><h2 id="向量-vectors" tabindex="-1"><a class="header-anchor" href="#向量-vectors" aria-hidden="true">#</a> 向量（Vectors）</h2><ul><li><strong>笛卡尔坐标系</strong><ul><li>X和Y分量能被正交分解成任意单位向量$$ A=\\dbinom{x}{y}$$$$\\mathbf{A}^\\mathrm{T} = (x, y)$$ $$||A||=\\sqrt{x<sup>2+y</sup>2}$$</li></ul></li><li>向量的表示</li><li>一般写成箭头或粗体 $$\\vec{a} 或 \\boldsymbol{a}$$ <ul><li>也可以使用两点进行表达（终点减起点）$$ \\vec{AB} = B-A $$</li><li>可通过向量知道方向以及长度</li><li>无需绝对的起点(<mark>原因？</mark>)</li></ul></li><li>向量模长的表示 $$ ||\\vec{a}||$$</li><li>单位向量 <ul><li>向量的长度为1的向量称之为单位向量</li><li>可求得某个一个向量的单位向量（归一化）$$\\hat{a} = \\vec{a} / ||\\vec{a}||$$</li><li>常用来表示向量的方向</li></ul></li></ul><h3 id="向量加法-vector-addition" tabindex="-1"><a class="header-anchor" href="#向量加法-vector-addition" aria-hidden="true">#</a> 向量加法（Vector Addition）</h3><ul><li>几何表示：四边形法则 / 三角形法则</li><li>代数表示：简单的对应坐标相加</li></ul><figure><img src="'+r+'" alt="向量的几何分解" tabindex="0" loading="lazy"><figcaption>向量的几何分解</figcaption></figure><h3 id="向量乘法-vector-multiplication" tabindex="-1"><a class="header-anchor" href="#向量乘法-vector-multiplication" aria-hidden="true">#</a> 向量乘法（Vector Multiplication）</h3><h3 id="向量点乘-dot-product-数量积-标量" tabindex="-1"><a class="header-anchor" href="#向量点乘-dot-product-数量积-标量" aria-hidden="true">#</a> 向量点乘（dot product）-&gt; 数量积，标量</h3><h4 id="计算原理" tabindex="-1"><a class="header-anchor" href="#计算原理" aria-hidden="true">#</a> 计算原理</h4><p>一般向量的计算：$$\\vec{a}·\\vec{b}=||a||·||b||·\\cos{\\theta}$$</p>',10),x={class:"katex-block"},$={class:"katex-display"},w={class:"katex"},k=s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mrow",null,[s("mi",null,"cos"),s("mo",null,"⁡"),s("mi",null,"θ"),s("mo",null,"="),s("mfrac",null,[s("mrow",null,[s("mover",{accent:"true"},[s("mi",null,"a"),s("mo",null,"⃗")]),s("mo",{separator:"true"},"⋅"),s("mover",{accent:"true"},[s("mi",null,"b"),s("mo",null,"⃗")])]),s("mrow",null,[s("mi",{mathvariant:"normal"},"∣"),s("mi",{mathvariant:"normal"},"∣"),s("mi",null,"a"),s("mi",{mathvariant:"normal"},"∣"),s("mi",{mathvariant:"normal"},"∣"),s("mo",{separator:"true"},"⋅"),s("mi",{mathvariant:"normal"},"∣"),s("mi",{mathvariant:"normal"},"∣"),s("mi",null,"b"),s("mi",{mathvariant:"normal"},"∣"),s("mi",{mathvariant:"normal"},"∣")])])]),s("annotation",{encoding:"application/x-tex"}," \\cos{\\theta}=\\frac{\\vec{a}·\\vec{b}}{||a||·||b||} ")])])],-1),M={class:"katex-html","aria-hidden":"true"},A=t('<span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mop">cos</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span>',1),z={class:"base"},S=s("span",{class:"strut",style:{height:"2.5904em","vertical-align":"-0.936em"}},null,-1),V={class:"mord"},B=s("span",{class:"mopen nulldelimiter"},null,-1),E={class:"mfrac"},L={class:"vlist-t vlist-t2"},N={class:"vlist-r"},j={class:"vlist",style:{height:"1.6544em"}},q=t('<span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣∣</span><span class="mord mathnormal">a</span><span class="mord">∣∣</span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">∣∣</span><span class="mord mathnormal">b</span><span class="mord">∣∣</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span>',2),J={style:{top:"-3.677em"}},T=s("span",{class:"pstrut",style:{height:"3em"}},null,-1),X={class:"mord"},Y={class:"mord accent"},C={class:"vlist-t"},G={class:"vlist-r"},H={class:"vlist",style:{height:"0.714em"}},I=s("span",{style:{top:"-3em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord mathnormal"},"a")],-1),O={style:{top:"-3em"}},R=s("span",{class:"pstrut",style:{height:"3em"}},null,-1),D={class:"accent-body",style:{left:"-0.2355em"}},P={class:"overlay",style:{height:"0.714em",width:"0.471em"}},Q={xmlns:"http://www.w3.org/2000/svg",width:"0.471em",height:"0.714em",style:{width:"0.471em"},viewBox:"0 0 471 714",preserveAspectRatio:"xMinYMin"},U=s("path",{d:`M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z`},null,-1),Z=[U],F=s("span",{class:"mpunct"},"⋅",-1),K=s("span",{class:"mspace",style:{"margin-right":"0.1667em"}},null,-1),W={class:"mord accent"},ss={class:"vlist-t"},as={class:"vlist-r"},ts={class:"vlist",style:{height:"0.9774em"}},es=s("span",{style:{top:"-3em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord mathnormal"},"b")],-1),is={style:{top:"-3.2634em"}},ns=s("span",{class:"pstrut",style:{height:"3em"}},null,-1),ls={class:"accent-body",style:{left:"-0.2355em"}},os={class:"overlay",style:{height:"0.714em",width:"0.471em"}},cs={xmlns:"http://www.w3.org/2000/svg",width:"0.471em",height:"0.714em",style:{width:"0.471em"},viewBox:"0 0 471 714",preserveAspectRatio:"xMinYMin"},rs=s("path",{d:`M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z`},null,-1),hs=[rs],ds=s("span",{class:"vlist-s"},"​",-1),ps=s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.936em"}},[s("span")])],-1),ms=s("span",{class:"mclose nulldelimiter"},null,-1),_s=t('<p>对于<strong>单位向量</strong>而言，这对于计算向量的夹角特别有用，可以将向量归一化为单位向量，再通过点乘，就可以得到夹角的余弦值：$$\\cos{\\theta}=\\vec{a}·\\vec{b}$$</p><h4 id="向量点乘支持的计算规则" tabindex="-1"><a class="header-anchor" href="#向量点乘支持的计算规则" aria-hidden="true">#</a> 向量点乘支持的计算规则</h4><ul><li>交换律</li><li>分配律</li><li>结合律</li></ul><figure><img src="'+h+'" alt="向量计算的规则" tabindex="0" loading="lazy"><figcaption>向量计算的规则</figcaption></figure><h4 id="笛卡尔坐标系中的点乘" tabindex="-1"><a class="header-anchor" href="#笛卡尔坐标系中的点乘" aria-hidden="true">#</a> 笛卡尔坐标系中的点乘</h4><p>对应坐标的元素相乘，最后求和即可</p><figure><img src="'+d+'" alt="笛卡尔坐标系中的点乘" tabindex="0" loading="lazy"><figcaption>笛卡尔坐标系中的点乘</figcaption></figure><h4 id="向量点乘在图形学的应用" tabindex="-1"><a class="header-anchor" href="#向量点乘在图形学的应用" aria-hidden="true">#</a> 向量点乘在图形学的应用</h4><ul><li>计算两个向量之间的夹角、 <ul><li>eg: 点光源与物体表面的余弦值</li></ul></li><li>计算一个向量在另一个向量上的<strong>投影</strong><ul><li>eg: 阴影计算 <img src="'+p+'" alt="点乘在图形学中的应用-向量投影.png" loading="lazy"></li></ul></li><li>计算两个向量的距离</li><li>正交分解（分解一个向量）</li><li>判断位置的前和后（根据余弦的图像可知，夹角小于90度则为正，即为前面；大于90小于180则为负，即为后面）</li></ul><figure><img src="'+m+'" alt="点乘在图形学中的应用-向量前后判断" tabindex="0" loading="lazy"><figcaption>点乘在图形学中的应用-向量前后判断</figcaption></figure><h3 id="向量叉乘-cross-product-向量积-向量" tabindex="-1"><a class="header-anchor" href="#向量叉乘-cross-product-向量积-向量" aria-hidden="true">#</a> 向量叉乘（cross product）-&gt; 向量积，向量</h3><h4 id="计算原理-1" tabindex="-1"><a class="header-anchor" href="#计算原理-1" aria-hidden="true">#</a> 计算原理</h4><figure><img src="'+_+'" alt="叉乘原理" tabindex="0" loading="lazy"><figcaption>叉乘原理</figcaption></figure><ul><li>叉乘后的向量是两个向量的正交向量</li><li>叉乘向量的方向是通过右手坐标系决定的，因此，可以根据叉乘后的向量判断坐标系（左手系/右手系）</li><li>在笛卡尔坐标系中很有用？</li></ul><h4 id="向量叉乘支持的计算规则" tabindex="-1"><a class="header-anchor" href="#向量叉乘支持的计算规则" aria-hidden="true">#</a> 向量叉乘支持的计算规则</h4><figure><img src="'+u+'" alt="叉乘支持的计算规则.png" tabindex="0" loading="lazy"><figcaption>叉乘支持的计算规则.png</figcaption></figure><h3 id="矩阵-matrices" tabindex="-1"><a class="header-anchor" href="#矩阵-matrices" aria-hidden="true">#</a> 矩阵（Matrices）</h3>',17);function us(gs,fs){const n=o("ExternalLinkIcon");return e(),i("div",null,[f,v,s("p",null,[a("源："),s("a",y,[a("GAMES101_Lecture_02 (ucsb.edu)"),c(n)])]),b,s("p",x,[s("span",$,[s("span",w,[k,s("span",M,[A,s("span",z,[S,s("span",V,[B,s("span",E,[s("span",L,[s("span",N,[s("span",j,[q,s("span",J,[T,s("span",X,[s("span",Y,[s("span",C,[s("span",G,[s("span",H,[I,s("span",O,[R,s("span",D,[s("span",P,[(e(),i("svg",Q,Z))])])])])])])]),F,K,s("span",W,[s("span",ss,[s("span",as,[s("span",ts,[es,s("span",is,[ns,s("span",ls,[s("span",os,[(e(),i("svg",cs,hs))])])])])])])])])])]),ds]),ps])]),ms])])])])])]),_s])}const bs=l(g,[["render",us],["__file","review-of-linear-algebra.html.vue"]]);export{bs as default};
