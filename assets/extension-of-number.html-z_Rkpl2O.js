const e=JSON.parse('{"key":"v-64a4ab20","path":"/front-end/javascript/es6/extension-of-number.html","title":"数值的拓展","lang":"zh-CN","frontmatter":{"index":false,"icon":"laptop-code","category":["JavaScript"],"description":"数值的拓展 isFinite() isNaN() isInteger()：判断数字是否为整数，点位过多时可能出现精度丢失 parseInt() =&gt; Number.parseInt() parseFloat() =&gt; Number.parseFloat() Number.EPSILON === Math.pow(2, -52)：用于浮点数计算，设置误差范围，明确是否计算数值是否精确。 eg. 误差范围设为 2 的-50 次方（即Number.EPSILON * Math.pow(2, 2)）","head":[["meta",{"property":"og:url","content":"https://xiaofengzeng.github.io/kite-notes/front-end/javascript/es6/extension-of-number.html"}],["meta",{"property":"og:site_name","content":"kite-notes"}],["meta",{"property":"og:title","content":"数值的拓展"}],["meta",{"property":"og:description","content":"数值的拓展 isFinite() isNaN() isInteger()：判断数字是否为整数，点位过多时可能出现精度丢失 parseInt() =&gt; Number.parseInt() parseFloat() =&gt; Number.parseFloat() Number.EPSILON === Math.pow(2, -52)：用于浮点数计算，设置误差范围，明确是否计算数值是否精确。 eg. 误差范围设为 2 的-50 次方（即Number.EPSILON * Math.pow(2, 2)）"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-26T06:36:59.000Z"}],["meta",{"property":"article:author","content":"Kite.Zeng"}],["meta",{"property":"article:modified_time","content":"2023-12-26T06:36:59.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"数值的拓展\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-12-26T06:36:59.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Kite.Zeng\\"}]}"]]},"headers":[],"git":{"createdTime":1703572619000,"updatedTime":1703572619000,"contributors":[{"name":"XiaofengZeng","email":"zengxf12123@163.com","commits":1}]},"readingTime":{"minutes":0.29,"words":87},"filePathRelative":"front-end/javascript/es6/extension-of-number.md","localizedDate":"2023年12月26日","excerpt":"<h1> 数值的拓展</h1>\\n<ul>\\n<li><code>isFinite()</code></li>\\n<li><code>isNaN()</code></li>\\n<li><code>isInteger()</code>：判断数字是否为整数，点位过多时可能出现精度丢失</li>\\n<li><code>parseInt()</code> =&gt; <code>Number.parseInt()</code></li>\\n<li><code>parseFloat()</code> =&gt; <code>Number.parseFloat()</code></li>\\n<li><code>Number.EPSILON</code> === <code>Math.pow(2, -52)</code>：用于浮点数计算，设置误差范围，明确是否计算数值是否精确。\\n<ul>\\n<li>eg. 误差范围设为 2 的-50 次方（即<code>Number.EPSILON * Math.pow(2, 2)</code>）</li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true}');export{e as data};
