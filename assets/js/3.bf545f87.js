(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{269:function(s,t,a){s.exports=a.p+"assets/img/install-1.53b520eb.png"},270:function(s,t,a){s.exports=a.p+"assets/img/install-2.d9fdfaf9.png"},271:function(s,t,a){s.exports=a.p+"assets/img/global-config-1.26650587.png"},272:function(s,t,a){s.exports=a.p+"assets/img/global-config-2.0e25eba0.png"},273:function(s,t,a){s.exports=a.p+"assets/img/global-config-3.f2fb0a68.png"},274:function(s,t,a){s.exports=a.p+"assets/img/global-config-5.5b0bb3ad.png"},275:function(s,t,a){s.exports=a.p+"assets/img/global-config-6.0fbc7b60.png"},276:function(s,t,a){s.exports=a.p+"assets/img/global-config-7.890edb2b.png"},277:function(s,t,a){s.exports=a.p+"assets/img/global-config-8.45d0ce81.png"},278:function(s,t,a){s.exports=a.p+"assets/img/global-config-9.eba1266a.png"},279:function(s,t,a){s.exports=a.p+"assets/img/build-view-1.c8113aa8.png"},280:function(s,t,a){s.exports=a.p+"assets/img/build-view-2.463cf913.png"},281:function(s,t,a){s.exports=a.p+"assets/img/system-config-1.2af55165.png"},282:function(s,t,a){s.exports=a.p+"assets/img/post-proccess-1.3e5d2236.png"},321:function(s,t,a){"use strict";a.r(t);var n=a(13),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"jenkins"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jenkins"}},[s._v("#")]),s._v(" Jenkins")]),s._v(" "),t("p",[t("u",[s._v("Jenkins是一个独立的开源软件项目，是基于Java开发的一种持续集成工具，用于监控持续重复的工作，旨在提供一个开放易用的软件平台，使软件的持续集成变成可能。\n前身是Hudson是一个可扩展的持续集成引擎。可用于自动化各种任务，如构建，测试和部署软件。\nJenkins可以通过本机系统包Docker安装，甚至可以通过安装Java Runtime Environment的任何机器独立运行。")]),t("sup",[s._v("1")])]),s._v(" "),t("h2",{attrs:{id:"安装-部署"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装-部署"}},[s._v("#")]),s._v(" 安装+部署")]),s._v(" "),t("h3",{attrs:{id:"安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[s._v("#")]),s._v(" 安装")]),s._v(" "),t("h4",{attrs:{id:"_1-war包安装-liunx"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-war包安装-liunx"}},[s._v("#")]),s._v(" 1. war包安装（Liunx）")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("准备Jenkins安装包"),t("code",[s._v("jenkins.war")])])]),s._v(" "),t("li",[t("p",[s._v("准备Jenkins启动/停止脚本（/）")]),s._v(" "),t("ul",[t("li",[s._v("启动脚本"),t("code",[s._v("jenkins-start.sh")])])]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/bin/bash ")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#Configs")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("WAR_NAME")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("jenkins.war\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("WAR_PATH")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/opt/software/jenkins/\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("WAR_FILE")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$WAR_PATH")]),s._v("/"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$WAR_NAME")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"authorize .sh"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("chmod")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("775")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$WAR_FILE")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"open jenkins port 8020"')]),s._v("\nfirewall-cmd --add-port"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8020")]),s._v("/tcp --permanent\nfirewall-cmd --reload\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("nohup")]),s._v(" java -jar "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$WAR_PATH")]),s._v("/jenkins.war --httpPort"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8020")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$WAR_PATH")]),s._v("/jenkins.log "),t("span",{pre:!0,attrs:{class:"token operator"}},[t("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("2")]),s._v(">")]),t("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("&1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("\n")])])]),t("ul",[t("li",[t("RouterLink",{attrs:{to:"/os_linux/sh.html#检查端口号并杀死对应进程"}},[s._v("停止脚本")]),t("code",[s._v("jenkins-stop.sh")])],1)])]),s._v(" "),t("li",[t("p",[s._v("执行启动脚本"),t("code",[s._v("jenkins-start.sh")])])])]),s._v(" "),t("h4",{attrs:{id:"_2-docker安装-liunx-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-docker安装-liunx-2"}},[s._v("#")]),s._v(" 2. Docker安装（Liunx）"),t("sup",[s._v("2")])]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查找jenkins镜像")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" search jenkins\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 选择并拉取适合本机环境的jenkins镜像,以jenkins/jenkins:latest为例")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" pull jenkins/jenkins:latest\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建宿主挂在目录")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" -p /opt/env/docker/jenkins_home\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("chmod")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("777")]),s._v(" /opt/env/docker/jenkins_home\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建并运行容器实例")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -p 10240:8080 ===> 端口映射，后续使用10240端口访问jenkins主页面")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -p 10241:50000 ===> 端口映射")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -v /opt/env/docker/jenkins_home:/var/jenkins_home ===> jenkins主目录挂载目录绑定")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -v /etc/localtime:/etc/localtime ===> 容器使用和服务器同样的时间设置")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run -d \n  --name jenkins "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  -p "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10240")]),s._v(":8080 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  -p "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10241")]),s._v(":50000 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  -v /opt/env/docker/jenkins_home:/var/jenkins_home "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  -v /etc/localtime:/etc/localtime "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  jenkins/jenkins\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 运行成功后，通过{IP}:{PORT}访问主界面")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 例如：192.168.1.36:10240")]),s._v("\n")])])]),t("h3",{attrs:{id:"部署"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#部署"}},[s._v("#")]),s._v(" 部署")]),s._v(" "),t("h4",{attrs:{id:"通过浏览器客户端对jenkins进行可视化部署"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#通过浏览器客户端对jenkins进行可视化部署"}},[s._v("#")]),s._v(" 通过浏览器客户端对Jenkins进行可视化部署")]),s._v(" "),t("ul",[t("li",[s._v("输入初始密码（初始密码可以从"),t("code",[s._v("jenkins-start.sh")]),s._v("脚本输出的"),t("code",[s._v("log")]),s._v("日志中查看，也可通过"),t("code",[s._v("cat/vi/vim")]),s._v("指令对下图红框文件使用进行查看）")])]),s._v(" "),t("p",[t("img",{attrs:{src:a(269),alt:"部署-初始密码",title:"部署-初始密码"}})]),s._v(" "),t("ul",[t("li",[s._v("安装插件时，选择推荐插件进行安装")])]),s._v(" "),t("p",[t("img",{attrs:{src:a(270),alt:"部署-推荐插件",title:"部署-推荐插件"}})]),s._v(" "),t("ul",[t("li",[t("p",[s._v("注册Jenkins管理员账户")])]),s._v(" "),t("li",[t("p",[s._v("集成插件安装（安装完成后，需要重启Jenkins。也可以在安装插件过程中，"),t("strong",[s._v("勾选自动重启")]),s._v("）")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("NodeJS Plugin")])]),s._v(" "),t("li",[t("strong",[s._v("Subversion Plug-in")])]),s._v(" "),t("li",[t("strong",[s._v("Maven Integration plugin")])]),s._v(" "),t("li",[t("strong",[s._v("Publish Over SSH")])])])])]),s._v(" "),t("h4",{attrs:{id:"全局配置-配置构建环境"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#全局配置-配置构建环境"}},[s._v("#")]),s._v(" 全局配置（配置构建环境）")]),s._v(" "),t("p",[t("strong",[s._v("构建集成环境可以使用本地环境，也可以使用Jenkins自主选择安装环境")])]),s._v(" "),t("ul",[t("li",[s._v("Maven配置（本地环境；注意，有两处需要配置）")])]),s._v(" "),t("p",[t("img",{attrs:{src:a(271),alt:"Maven配置1",title:"Maven配置1"}})]),s._v(" "),t("p",[t("img",{attrs:{src:a(272),alt:"Maven配置2",title:"Maven配置2"}})]),s._v(" "),t("ul",[t("li",[s._v("JDK配置（本地环境）")])]),s._v(" "),t("p",[t("img",{attrs:{src:a(273),alt:"JDK配置",title:"JDK配置"}})]),s._v(" "),t("ul",[t("li",[s._v("NodeJS配置（本地环境；该配置项需要安装完NodeJS Plugin插件才会出现）")])]),s._v(" "),t("p",[t("img",{attrs:{src:a(274),alt:"NodeJS配置",title:"NodeJS配置"}})]),s._v(" "),t("ul",[t("li",[s._v("凭证配置（分"),t("code",[s._v("SVN")]),s._v("和"),t("code",[s._v("Git")]),s._v("配置）\n"),t("ul",[t("li",[t("p",[s._v("通用步骤（找到账号凭证配置）")]),s._v(" "),t("p",[t("img",{attrs:{src:a(275),alt:"账号凭证项",title:"账号凭证项"}}),s._v(" "),t("img",{attrs:{src:a(276),alt:"全局凭证",title:"全局凭证"}})])]),s._v(" "),t("li",[t("p",[t("code",[s._v("SVN")])]),s._v(" "),t("p",[t("img",{attrs:{src:a(277),alt:"账号凭证配置",title:"账号凭证配置"}})])]),s._v(" "),t("li",[t("p",[t("code",[s._v("Git")])]),s._v(" "),t("p",[t("img",{attrs:{src:a(278),alt:"账号凭证配置",title:"账号凭证配置"}})])])])])]),s._v(" "),t("h2",{attrs:{id:"项目构建"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#项目构建"}},[s._v("#")]),s._v(" 项目构建")]),s._v(" "),t("p",[s._v("在Jenkins中，存在视图和项目两个重要的概念。项目是一个个独立的构建项，而视图可以存放着许多构建项，即项目的容器。每个构建项中有许多配置项，如"),t("code",[s._v("源码管理")]),s._v("、"),t("code",[s._v("构建触发器")]),s._v("、"),t("code",[s._v("构建环境")]),s._v("、"),t("code",[s._v("构建预处理")]),s._v("，"),t("code",[s._v("构建后处理")]),s._v("等等操作")]),s._v(" "),t("h3",{attrs:{id:"视图构建"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#视图构建"}},[s._v("#")]),s._v(" 视图构建")]),s._v(" "),t("p",[t("img",{attrs:{src:a(279),alt:'"构建视图"',title:"构建视图"}}),s._v(" "),t("img",{attrs:{src:a(280),alt:'"构建视图"',title:"构建视图"}})]),s._v(" "),t("h3",{attrs:{id:"项目构建-通用操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#项目构建-通用操作"}},[s._v("#")]),s._v(" 项目构建-通用操作")]),s._v(" "),t("ul",[t("li",[s._v("源码管理。填入源码地址+凭证")]),s._v(" "),t("li",[s._v("在【"),t("strong",[s._v("构建触发器")]),s._v("】标签页中勾选"),t("code",[s._v("触发远程构建")]),s._v("、"),t("code",[s._v("Poll SCM")]),s._v("，"),t("code",[s._v("Build after orther projects are built")]),s._v("选项是构建情况而定（构建后端资源需要，构建前端资源不需要）\n"),t("ul",[t("li",[t("p",[t("code",[s._v("触发远程构建")]),s._v("：可通过"),t("code",[s._v("<JENKINS_URL>/job/<ITEM_NAME>/build?token=<TOKEN>")]),s._v("的方式进行远程构建，不需要进入Jenkins管理界面")])]),s._v(" "),t("li",[t("p",[t("code",[s._v("Poll SCM")]),s._v("：计划构建，用于定时检查源码变更并构建")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 该语句会输出上次一的构建时间以及下一次的将要构建的时间    ")]),s._v("\nH "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" * * *\n")])])])])])])]),s._v(" "),t("h3",{attrs:{id:"后端项目构建"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#后端项目构建"}},[s._v("#")]),s._v(" 后端项目构建")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("设置完通用操作后，在【"),t("strong",[s._v("Build")]),s._v("】标签页中，设置"),t("code",[s._v("Goals and options")]),s._v("配置项")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("clean install")]),s._v("：即先清理原有的再构建新的")]),s._v(" "),t("li",[t("code",[s._v("clean package -DskipTests")]),s._v("：即先清理原有的再打包，同时不执行测试用例")])])]),s._v(" "),t("li",[t("p",[s._v("注意构建代码前后处理")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("构建代码前处理：主要是判断该JAR包的端口是否存在，存在则杀死->"),t("RouterLink",{attrs:{to:"/os_linux/sh.html#检查端口号并杀死对应进程"}},[s._v("Shell脚本")])],1)]),s._v(" "),t("li",[t("p",[s._v("构建代码后处理：移动JAR包到指定目录，重启启动")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/bin/bash")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 构建名称")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ITEM_NAME")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("my-jar\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 目标存放目录")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("TARGET_PATH")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/home/jar\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 复制JAR包到指定目录下，并统一名称")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v(" /root/.jenkins/workspace/"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$ITEM_NAME")]),s._v("/target/"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$ITEM_NAME")]),s._v("-0.0.1-SNAPSHOT.jar "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$TARGET_PATH")]),s._v("/"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$ITEM_NAME")]),s._v(".jar\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 启动JAR包，打印输出日志文件")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"start '),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$ITEM_NAME")]),s._v('"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("nohup")]),s._v(" java -jar "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$TARGET_PATH")]),s._v("/"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$ITEM_NAME")]),s._v(".jar "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$TARGET_PATH")]),s._v("/out/"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$ITEM_NAME")]),s._v(".out "),t("span",{pre:!0,attrs:{class:"token operator"}},[t("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("2")]),s._v(">")]),t("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("&1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("\n")])])])])])])]),s._v(" "),t("h3",{attrs:{id:"前端项目构建"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#前端项目构建"}},[s._v("#")]),s._v(" 前端项目构建")]),s._v(" "),t("ul",[t("li",[s._v("设置完通用操作后，1. 在【"),t("strong",[s._v("构建环境")]),s._v("】勾选"),t("code",[s._v("Provide Node & npm bin/ folder to PATH")]),s._v(" ，即使用先前在jenkins中配置好的node环境")]),s._v(" "),t("li",[s._v("在【构建】标签页中，添加执行Shell脚本\n"),t("ul",[t("li",[t("p",[s._v("构建代码后处理：移动构建后的文件夹到指定目录（一般是应用服务器[如"),t("code",[s._v("Tomcat")]),s._v("]的目录，具体由应用服务器的配置决定）")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/bin/bash")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 构建名称")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ITEM_NAME")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("my-frontend\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 前端工程名称")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("PROJRCT_NAME")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("my-nest\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 前端工程后名称")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("PROJECT_ALIAS")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("nest\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 静态目录")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("STATIC_PATH")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/home/nest\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# npm构建脚本")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("BUILD_SCRIPT")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("build:"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$PROJECT_ALIAS")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#DATE=$(date +%Y%m%d%H%M%S)")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" /root/.jenkins/workspace/"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$ITEM_NAME")]),s._v("/"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$PROJRCT_NAME")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#TODO: 时间备份")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#mv $STATIC_PATH/$PROJECT_ALIAS $STATIC_PATH/$PROJECT_ALIAS/$DATE")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 依赖安装+构建")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" run "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$BUILD_SCRIPT")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$?")]),s._v(" -ne "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exit")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" -rf "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$STATIC_PATH")]),s._v("/"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$PROJECT_ALIAS")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#cp -r /root/.jenkins/workspace/$ITEM_NAME/$PROJRCT_NAME/$PROJECT_ALIAS $STATIC_PATH")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("find")]),s._v(" ./"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$PROJECT_ALIAS")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" -vE "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/.svn|/.git"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" cpio -pdm "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$STATIC_PATH")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n")])])])])])])]),s._v(" "),t("h3",{attrs:{id:"构建后处理-可选-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#构建后处理-可选-3"}},[s._v("#")]),s._v(" 构建后处理（可选）"),t("sup",[s._v("3")])]),s._v(" "),t("p",[s._v("构建后处理比较常用的操作是文件传输+文件路径的改变+程序启动，需要用到先前安装的插件"),t("strong",[s._v("Publish Over SSH")])]),s._v(" "),t("h4",{attrs:{id:"配置远程连接"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#配置远程连接"}},[s._v("#")]),s._v(" 配置远程连接")]),s._v(" "),t("p",[s._v("前往【系统配置】，找到【Publish over SSH】配置项的【SSH Servers】小项")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("配置连接信息，保存即可")]),s._v(" "),t("p",[t("img",{attrs:{src:a(281),alt:"配置连接信息",title:"配置连接信息"}})])]),s._v(" "),t("li",[t("p",[s._v("在构建项目中配置【构建后操作】操作")]),s._v(" "),t("ul",[t("li",[s._v("Source files：需要传输的文件/文件夹")]),s._v(" "),t("li",[s._v("Remove prefix：需要移除的目录前缀，基于Source files路径")]),s._v(" "),t("li",[s._v("Remote directory：远程的目录（默认为远程用户的目录，root -> /root）")]),s._v(" "),t("li",[s._v("Exec command：需要执行的操作")])]),s._v(" "),t("p",[t("img",{attrs:{src:a(282),alt:"构建后操作",title:"构建后操作"}})])])]),s._v(" "),t("h2",{attrs:{id:"参考文档"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考文档"}},[s._v("#")]),s._v(" 参考文档")]),s._v(" "),t("ol",[t("li",[t("a",{attrs:{href:"https://www.w3cschool.cn/jenkins/",target:"_blank",rel:"noopener noreferrer"}},[s._v("Jenkins中文文档-W3C School"),t("OutboundLink")],1)]),s._v(" "),t("li",[t("a",{attrs:{href:"https://blog.csdn.net/qq359605040/article/details/117692609",target:"_blank",rel:"noopener noreferrer"}},[s._v("Docker安装Jenkins详细教程"),t("OutboundLink")],1)]),s._v(" "),t("li",[t("a",{attrs:{href:"https://juejin.cn/post/7067790095767568397#heading-16",target:"_blank",rel:"noopener noreferrer"}},[s._v("基于Docker安装Jenkins，并配置使用Jenkins打包Node前后端服务部署到远程服务器"),t("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=e.exports}}]);