import{_ as l}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as i,o as t,c as o,b as n,d as s,a as p,e as a}from"./app-nlX3gzzp.js";const c="/kite-notes/assets/pnpm_motivation_1-ki0l8-Fk.jpg",d="/kite-notes/assets/pnpm_motivation_2-ATMagubV.jpg",r={},u=a('<h1 id="pnpm" tabindex="-1"><a class="header-anchor" href="#pnpm" aria-hidden="true">#</a> pnpm</h1><h2 id="_1-npmp简介" tabindex="-1"><a class="header-anchor" href="#_1-npmp简介" aria-hidden="true">#</a> 1. npmp简介</h2><h3 id="_1-1-pnpm特点" tabindex="-1"><a class="header-anchor" href="#_1-1-pnpm特点" aria-hidden="true">#</a> 1.1 pnpm特点</h3><ul><li><p><mark>【无痛切换】</mark>与<code>npm</code>/<code>yarn</code>等主流包管理工具的使用类似，易于上手</p></li><li><p><mark>【节省磁盘空间并提升安装速度】</mark>采用<code>统一的包管理目录</code>对机器所安装的所有包进行管理</p><ul><li>项目需要依赖时首先会去该目录下检索，存在则复用，没有则新添加至统一包管理目录；</li><li>如果是相同的依赖但不同版本时，只会检索该依赖下不同的依赖进行添加；</li></ul></li><li><p><mark>【非扁平的 node_modules 目录】</mark>依赖使用<code>硬链接(hard-link)</code>和<code>符号链接(symbolic link)</code>进行相互关联</p><ul><li>在项目的<code>node_modules</code>目录中存在<code>.pnpm</code>目录，以及同级的、使用符号连接的依赖目录</li><li><code>.pnpm</code>目录下面的部分依赖<u>硬链接</u>至<code>统一包管理目录</code>，而<code>.pnpm</code>目录同级的以来则是使用<u>符号链接</u>对依赖进行引用</li></ul></li><li><p><mark>【多栖环境】</mark>pnpm可以不需要对node的环境有太多依赖，因为自身可以设置使用node的具体版本</p></li></ul><p><img src="'+c+'" alt="节省磁盘空间并提升安装速度" title="节省磁盘空间并提升安装速度" loading="lazy"><img src="'+d+'" alt="非扁平的node_modules目录" title="非扁平的node_modules目录" loading="lazy"></p><h3 id="_1-2-pnpm与npm-yarn的区别-优势-1-2" tabindex="-1"><a class="header-anchor" href="#_1-2-pnpm与npm-yarn的区别-优势-1-2" aria-hidden="true">#</a> 1.2 pnpm与npm/yarn的区别(优势)<sup>1,2</sup></h3><ul><li>相比<code>npm2</code> ，<code>pnpm</code>不会进行同样依赖的多次复制</li><li>相比<code>yarn</code>以及<code>npm3+</code>，不会有幽灵依赖（幽灵依赖是由于依赖声明丢失造成的）和，也不会有依赖分身（没有被提升的依赖依然复制多份）\\</li></ul><h3 id="_1-3-pnpm的弊端2" tabindex="-1"><a class="header-anchor" href="#_1-3-pnpm的弊端2" aria-hidden="true">#</a> 1.3 pnpm的弊端<sup>2</sup></h3><ul><li>无法在不支持软连接的环境中使用<code>pnpm</code>，比如<code>Electron</code>应用</li><li>因为依赖安装在<code>统一的包管理目录</code>中的，调试依赖或使用<code>patch-package</code>给依赖打补丁不方便，可能会影响到其他项目</li></ul><h2 id="_2-安装与配置" tabindex="-1"><a class="header-anchor" href="#_2-安装与配置" aria-hidden="true">#</a> 2. 安装与配置</h2>',10),m=a(`<li><p>安装</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 安装（一般全局安装）</span>
<span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-g</span> <span class="token function">pnpm</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li>`,1),v=n("p",null,"配置",-1),k=n("p",null,[n("strong",null,"node环境设置")],-1),b={href:"https://www.pnpm.cn/installation",target:"_blank",rel:"noopener noreferrer"},h=n("code",null,"pnpm env",-1),g=a(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 全局使用最新node版本</span>
<span class="token function">pnpm</span> <span class="token function">env</span> use <span class="token parameter variable">--global</span> lts
<span class="token comment"># 全局使用具体node版本号的版本</span>
<span class="token function">pnpm</span> <span class="token function">env</span> use <span class="token parameter variable">--global</span> xx.xx.x
<span class="token comment"># 全局使用预发布版本</span>
<span class="token function">pnpm</span> <span class="token function">env</span> use <span class="token parameter variable">--global</span> nightly
<span class="token function">pnpm</span> <span class="token function">env</span> use <span class="token parameter variable">--global</span> rc
<span class="token function">pnpm</span> <span class="token function">env</span> use <span class="token parameter variable">--global</span> <span class="token number">16.0</span>.0-rc.0
<span class="token function">pnpm</span> <span class="token function">env</span> use <span class="token parameter variable">--global</span> rc/14
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),_=a(`<li><p><strong>统一存储目录（内容寻址目录）</strong></p><ul><li>自动生成 会自动在当前磁盘分区的根目录生成<code>.pnmp-store</code>目录</li><li>手动生成</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">pnpm</span> config <span class="token builtin class-name">set</span> store-dir <span class="token punctuation">{</span>path<span class="token punctuation">}</span>/.pnpm-store
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p><strong>镜像</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 查看镜像</span>
<span class="token function">pnpm</span> config get registry 
<span class="token comment"># 切换镜像（淘宝镜像）</span>
<span class="token function">pnpm</span> config <span class="token builtin class-name">set</span> registry https://registry.npmmirror.com/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>环境变量（Path）+全局指令目录（global-bin-dir）</strong></p><ul><li><p>自动配置环境</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 自动配置环境变量</span>
<span class="token function">pnpm</span> setup
<span class="token comment"># 设置全局bin文件目录</span>
<span class="token function">pnpm</span> config <span class="token builtin class-name">set</span> global-bin-dir <span class="token punctuation">{</span>path<span class="token punctuation">}</span>/.pnpm-global-bin-dir
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>手动设置</p><ul><li><p>Windows</p><ol><li>设置变量：<code>PNPM_HOME</code>，变量值：<code>{path}/.pnpm-global-bin-dir</code></li><li>变量该添加至Path中：<code>%PNPM_HOME%</code></li><li>设置全局bin文件目录：</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">pnpm</span> config <span class="token builtin class-name">set</span> global-bin-dir <span class="token punctuation">{</span>path<span class="token punctuation">}</span>/.pnpm-global-bin-dir
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>Linux</p><p><code>TODO...</code></p></li></ul></li></ul></li>`,3),f=a(`<h2 id="_3-常用-cli-操作" tabindex="-1"><a class="header-anchor" href="#_3-常用-cli-操作" aria-hidden="true">#</a> 3. 常用 CLI 操作</h2><p>对项目/依赖的相关操作与<code>npm</code>/<code>yarn</code>类似</p><h3 id="_3-1-添加-移除-更新" tabindex="-1"><a class="header-anchor" href="#_3-1-添加-移除-更新" aria-hidden="true">#</a> 3.1 添加/移除/更新</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># []表示可替换选项，其中/分隔为选项可选</span>
<span class="token comment"># &lt;pkg&gt;表示相应的依赖包名称</span>

<span class="token comment"># 安装项目所有依赖</span>
<span class="token function">pnpm</span> install<span class="token punctuation">[</span>i<span class="token punctuation">]</span>

<span class="token comment"># 安装-全局依赖(从全局环境中添加指定的软件包)</span>
<span class="token function">pnpm</span> <span class="token function">add</span> -g<span class="token punctuation">[</span>--global<span class="token punctuation">]</span> <span class="token operator">&lt;</span>pkg<span class="token operator">&gt;</span>
<span class="token comment"># 安装-开发依赖(添加至devDependencies配置项)</span>
<span class="token function">pnpm</span> <span class="token function">add</span> -D<span class="token punctuation">[</span>--save-dev<span class="token punctuation">]</span> <span class="token operator">&lt;</span>pkg<span class="token operator">&gt;</span>
<span class="token comment"># 安装-生产依赖(添加至dependencies配置项)</span>
<span class="token function">pnpm</span> <span class="token function">add</span> <span class="token punctuation">[</span>-P/--save-prod<span class="token punctuation">]</span> <span class="token operator">&lt;</span>pkg<span class="token operator">&gt;</span>

<span class="token comment"># 删除-全局依赖(从全局环境中删除指定的软件包)</span>
<span class="token function">pnpm</span> remove<span class="token punctuation">[</span>rm/uninstall/un<span class="token punctuation">]</span> -g<span class="token punctuation">[</span>--global<span class="token punctuation">]</span> <span class="token operator">&lt;</span>pkg<span class="token operator">&gt;</span>
<span class="token comment"># 删除-开发依赖(从devDependencies配置项中移除)</span>
<span class="token function">pnpm</span> remove<span class="token punctuation">[</span>rm/uninstall/un<span class="token punctuation">]</span> -D<span class="token punctuation">[</span>--save-dev<span class="token punctuation">]</span> <span class="token operator">&lt;</span>pkg<span class="token operator">&gt;</span>
<span class="token comment"># 删除-生产依赖(从dependencies配置项中移除)</span>
<span class="token function">pnpm</span> remove<span class="token punctuation">[</span>rm/uninstall/un<span class="token punctuation">]</span> <span class="token punctuation">[</span>-P/--save-prod<span class="token punctuation">]</span> <span class="token operator">&lt;</span>pkg<span class="token operator">&gt;</span>

<span class="token comment"># 更新-全局依赖</span>
<span class="token function">pnpm</span> update<span class="token punctuation">[</span>up<span class="token punctuation">]</span> -g<span class="token punctuation">[</span>--global<span class="token punctuation">]</span> <span class="token operator">&lt;</span>pkg<span class="token operator">&gt;</span>
<span class="token comment"># 更新-开发依赖</span>
<span class="token function">pnpm</span> update<span class="token punctuation">[</span>up<span class="token punctuation">]</span> -D<span class="token punctuation">[</span>--dev<span class="token punctuation">]</span> <span class="token operator">&lt;</span>pkg<span class="token operator">&gt;</span>
<span class="token comment"># 更新-生产依赖</span>
<span class="token function">pnpm</span> update<span class="token punctuation">[</span>up<span class="token punctuation">]</span> -P<span class="token punctuation">[</span>--prod<span class="token punctuation">]</span> <span class="token operator">&lt;</span>pkg<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-2-清理" tabindex="-1"><a class="header-anchor" href="#_3-2-清理" aria-hidden="true">#</a> 3.2 清理</h3><p>删除不需要的软件包，<mark><strong>不建议经常执行该指令</strong></mark></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">pnpm</span> prune
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_3-3-运行脚本" tabindex="-1"><a class="header-anchor" href="#_3-3-运行脚本" aria-hidden="true">#</a> 3.3 运行脚本</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># &lt;script&gt;是项目package.json中的script脚本</span>

<span class="token function">pnpm</span> run <span class="token operator">&lt;</span>script<span class="token operator">&gt;</span>
<span class="token function">pnpm</span> <span class="token operator">&lt;</span>script<span class="token operator">&gt;</span> <span class="token comment"># 简写(前提是脚本与pnpm内建指令不冲突)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="参考文档" tabindex="-1"><a class="header-anchor" href="#参考文档" aria-hidden="true">#</a> 参考文档</h2>`,10),x={href:"https://mp.weixin.qq.com/s/sRKiqFNs24NYPxO4P5jq6Q",target:"_blank",rel:"noopener noreferrer"},y={href:"https://mp.weixin.qq.com/s/5YJYxvcqZIifQIsTR_I3fA",target:"_blank",rel:"noopener noreferrer"};function P(N,q){const e=i("ExternalLinkIcon");return t(),o("div",null,[u,n("ul",null,[m,n("li",null,[v,n("ul",null,[n("li",null,[k,n("p",null,[s("pnpm支持在没有node(npm)的环境下进行"),n("a",b,[s("安装"),p(e)]),s("。 安装完成后，可以使用"),h,s("指令对node版本进行设置")]),g]),_])])]),f,n("ol",null,[n("li",null,[n("p",null,[n("a",x,[s("pnpm 是凭什么对 npm 和 yarn 降维打击的"),p(e)])])]),n("li",null,[n("p",null,[n("a",y,[s("深入浅出 npm & yarn & pnpm 包管理机制"),p(e)])])])])])}const E=l(r,[["render",P],["__file","pnpm.html.vue"]]);export{E as default};
